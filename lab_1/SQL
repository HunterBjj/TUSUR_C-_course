elect d.*
from (
    select
        wl.source_s,
        ft.name OILFIELD,
        wt.name WELL,
        case             
                when wl.layer_s = 188546500 then 'Ю1(2+3)' 
                when wl.layer_s = 2295966101 then 'Ю1(М)'
                else (select name from layer dt where dt.layer_s = wl.layer_s)
        end KPLAST,
        case             
                when wl.layer_s = 188546500 then 'Ю1(2+3)' 
                when wl.layer_s = 2295966101 then 'Ю1(М)'
                else (select name from layer dt where dt.layer_s = wl.layer_s)
        end KPLASTZONE,
        top H,
        base-top L,
        top_dsrd Habs,
        base_dsrd-top_dsrd Labs,
        (select name from pxp.dict_table dt where dt.dict_s = wl.lithology_s) Lit,
        case
            when wl.saturation_s = 135616250 then 
                0
            else 
                1 
        end Collector,
        case 
            when wl.saturation_s = 135616250 then 
                ''
            else 
                (select name from pxp.dict_table dt where dt.dict_s = wl.saturation_s) 
        end Sat0,
        r R,
        rel_par_sp APS,
        rel_par_g aGK,
        rel_par_n aNKT,
        porosity_o * 100 Kpor,
        permeability Kpr,
        kg Kgas,
        clay Kgl,
        kng * 100 Kng
    from well_log_result_layer wl,
        pxp.well_table wt,
        pxp.field_table ft
    where wl.source_schema =  /* 'VTK' -- */ 'SVN'
        and wt.well_s = wl.well_s 
        and wt.field_s = ft.field_s
        and wl.well_s in (
            select distinct cwl.well_s 
            from well_log_result_layer cwl
            where cwl.source_schema = wl.source_schema
                and cwl.source_s in (
        25631757707 /*ОПЗ 2018*/,
        26069757407 /*ОПЗ 2019*/,
        26069757507 /*ОПЗ 2020*/,
        26069757607 /*ОПЗ 2021*/,
        26069757707 /*ОПЗ 2022*/,
        26069757807 /*ОПЗ 2023*/,
        26069757907 /*ОПЗ 2024*/,
        26069758007 /*ОПЗ 2025*/,
        26069758107 /*ОПЗ 2026*/,
        26069758207 /*ОПЗ 2027*/,
        26069758307 /*ОПЗ 2028*/,
        26069758407 /*ОПЗ 2029*/,
        26069758507 /*ОПЗ 2030*/,
                    19533202006 /*ПЗ 2010*/,
                    25566543207 /*ПЗ 2018*/,
                    25832319107 /*ПЗ 2019*/,
                    26069756007 /*ПЗ 2020*/,
                    26069756107 /*ПЗ 2021*/,
                    26069756207 /*ПЗ 2022*/,
                    26069756307 /*ПЗ 2023*/,
                    26069756407 /*ПЗ 2024*/,
                    26069756507 /*ПЗ 2025*/,
                    26069756607 /*ПЗ 2026*/,
                    26069756707 /*ПЗ 2027*/,
                    26069756807 /*ПЗ 2028*/,
                    26069756907 /*ПЗ 2029*/,
                    26069757007 /*ПЗ 2030*/,
26508688107 /*ПАО «ННК-Варьеганнефтегаз»*/,
26508745407 /*АО «ННК-ННП»*/,
25958343407 /*ООО "Няганьнефть"*/,
26685661907 /*ООО ННК-Оренбургнефтегаз*/,
26904172007 /*ООО «ННК Северная-нефть»*/,   
27173511907  /*  АО "Нефтегаз Югра"*/)
        )
        and wl.result_date = (
            select max(cwl.result_date) 
            from well_log_result_layer cwl
            where cwl.source_schema = wl.source_schema
                and cwl.well_s = wl.well_s  
                and cwl.source_s in (    
        25631757707 /*ОПЗ 2018*/,
        26069757407 /*ОПЗ 2019*/,
        26069757507 /*ОПЗ 2020*/,
        26069757607 /*ОПЗ 2021*/,
        26069757707 /*ОПЗ 2022*/,
        26069757807 /*ОПЗ 2023*/,
        26069757907 /*ОПЗ 2024*/,
        26069758007 /*ОПЗ 2025*/,
        26069758107 /*ОПЗ 2026*/,
        26069758207 /*ОПЗ 2027*/,
        26069758307 /*ОПЗ 2028*/,
        26069758407 /*ОПЗ 2029*/,
        26069758507 /*ОПЗ 2030*/,
                    19533202006 /*ПЗ 2010*/,                    
                    25566543207 /*ПЗ 2018*/,
                    25832319107 /*ПЗ 2019*/,
                    26069756007 /*ПЗ 2020*/,
                    26069756107 /*ПЗ 2021*/,
                    26069756207 /*ПЗ 2022*/,
                    26069756307 /*ПЗ 2023*/,
                    26069756407 /*ПЗ 2024*/,
                    26069756507 /*ПЗ 2025*/,
                    26069756607 /*ПЗ 2026*/,
                    26069756707 /*ПЗ 2027*/,
                    26069756807 /*ПЗ 2028*/,
                    26069756907 /*ПЗ 2029*/,
                    26069757007 /*ПЗ 2030*/,
26508688107 /*ПАО «ННК-Варьеганнефтегаз»*/,
26508745407 /*АО «ННК-ННП»*/,
25958343407 /*ООО "Няганьнефть"*/,
26685661907 /*ООО ННК-Оренбургнефтегаз*/,
26701578407 /*ООО "ННК-Самаранефтегаз"*/,
26904172007 /*ООО «ННК Северная-нефть»*/,   
27173511907  /*  АО "Нефтегаз Югра"*/)
        )
    union all
    select
        wl.source_s,
        ft.name OILFIELD,
        wt.name WELL,
        case             
                when wl.layer_s = 188546500 then 'Ю1(2+3)' 
                when wl.layer_s = 2295966101 then 'Ю1(М)'
                else (select name from layer dt where dt.layer_s = wl.layer_s)
        end KPLAST,
        case             
                when wl.layer_s = 188546500 then 'Ю1(2+3)' 
                when wl.layer_s = 2295966101 then 'Ю1(М)'
                else (select name from layer dt where dt.layer_s = wl.layer_s)
        end KPLASTZONE,
        top H,
        base-top L,
        top_dsrd Habs,
        base_dsrd-top_dsrd Labs,
        (select name from pxp.dict_table dt where dt.dict_s = wl.lithology_s) Lit,
        case
            when wl.saturation_s = 135616250 then 
                0
            else 
                1 
        end Collector,
        case 
            when wl.saturation_s = 135616250 then 
                ''
            else 
                (select name from pxp.dict_table dt where dt.dict_s = wl.saturation_s) 
        end Sat0,
        r R,
        rel_par_sp APS,
        rel_par_g aGK,
        rel_par_n aNKT,
        porosity_o * 100 Kpor,
        permeability Kpr,
        kg Kgas,
        clay Kgl,
        kng * 100 Kng
    from well_log_result_layer wl,
        pxp.well_table wt,
        pxp.field_table ft
    where wt.well_s = wl.well_s 
        and wt.field_s = ft.field_s
        and wl.source_schema = /* 'VTK' -- */ 'SVN'
        and wl.well_s in (
            select distinct cwl.well_s 
            from well_log_result_layer cwl
            where cwl.source_schema = wl.source_schema
                and not exists (
                    select * 
                    from well_log_result_layer c 
                    where c.well_s = cwl.well_s
                        and c.source_s in (
                25631757707 /*ОПЗ 2018*/,
                26069757407 /*ОПЗ 2019*/,
                26069757507 /*ОПЗ 2020*/,
                26069757607 /*ОПЗ 2021*/,
                26069757707 /*ОПЗ 2022*/,
                26069757807 /*ОПЗ 2023*/,
                26069757907 /*ОПЗ 2024*/,
                26069758007 /*ОПЗ 2025*/,
                26069758107 /*ОПЗ 2026*/,
                26069758207 /*ОПЗ 2027*/,
                26069758307 /*ОПЗ 2028*/,
                26069758407 /*ОПЗ 2029*/,
                26069758507 /*ОПЗ 2030*/,
                            19533202006 /*ПЗ 2010*/,                
                            25566543207 /*ПЗ 2018*/,
                            25832319107 /*ПЗ 2019*/,
                            26069756007 /*ПЗ 2020*/,
                            26069756107 /*ПЗ 2021*/,
                            26069756207 /*ПЗ 2022*/,
                            26069756307 /*ПЗ 2023*/,
                            26069756407 /*ПЗ 2024*/,
                            26069756507 /*ПЗ 2025*/,
                            26069756607 /*ПЗ 2026*/,
                            26069756707 /*ПЗ 2027*/,
                            26069756807 /*ПЗ 2028*/,
                            26069756907 /*ПЗ 2029*/,
                            26069757007 /*ПЗ 2030*/,                            
26508688107 /*ПАО «ННК-Варьеганнефтегаз»*/,
26508745407 /*АО «ННК-ННП»*/,
25958343407 /*ООО "Няганьнефть"*/,
26685661907 /*ООО ННК-Оренбургнефтегаз*/,
26701578407 /*ООО "ННК-Самаранефтегаз"*/,   
27173511907  /*  АО "Нефтегаз Югра"*/)
            )
        )
        and wl.result_date = (
            select max(cwl.result_date) 
            from well_log_result_layer cwl
            where cwl.source_schema = wl.source_schema
                and cwl.well_s = wl.well_s)) d           
where d.kplast is not null and d.kplast <>'Нет значения'

Ваш запрос довольно сложный и имеет много подзапросов и условий, связанных с различными таблицами, такими как well_log_result_layer, pxp.well_table, pxp.field_table и layer. Вы упомянули, что у вас возникают проблемы с данными, когда используется источник SVN, а не VTK. Попробуем разобраться в потенциальных проблемах и предложить пути их устранения.

Вот несколько шагов, которые могут помочь вам отладить и понять, почему данные из SVN не возвращаются:

1. Проверка данных в SVN и VTK
Убедитесь, что данные действительно присутствуют в базе данных для source_schema = 'SVN'. Выполните простой запрос, чтобы проверить, возвращаются ли какие-либо данные для источника SVN. Например:

sql
Копировать код
SELECT * 
FROM well_log_result_layer
WHERE source_schema = 'SVN'
LIMIT 10;
Если запрос не возвращает строки, это может означать, что в базе данных нет данных для source_schema = 'SVN'.

2. Удалите условия по одному
Чтобы определить, какой из фильтров вызывает проблему, попробуйте последовательно убирать условия и проверять, возвращает ли запрос данные. Например, временно уберите условие and wl.source_s in (...) и проверьте, влияет ли это на результат.

3. Проверьте подзапросы и условия
В запросе есть несколько подзапросов, таких как:

sql
Копировать код
(select name from layer dt where dt.layer_s = wl.layer_s)
и

sql
Копировать код
(select max(cwl.result_date) from well_log_result_layer cwl ...)
Попробуйте выполнить каждый из подзапросов отдельно, чтобы убедиться, что они возвращают данные для source_schema = 'SVN'. Например:

sql
Копировать код
SELECT name 
FROM layer 
WHERE layer_s = (значение layer_s из well_log_result_layer);
4. Убедитесь, что индексы обновлены
Если вы добавляли или обновляли данные, убедитесь, что индексы в таблицах (well_log_result_layer, layer, и других) правильно обновлены. Попробуйте перестроить индексы для улучшения производительности.

5. Проверьте значение result_date
Ваш запрос фильтрует строки по последней дате result_date. Возможно, данных с определенными result_date для source_schema = 'SVN' нет. Проверьте, существует ли какая-либо запись для SVN с максимальной result_date:

sql
Копировать код
SELECT MAX(result_date) 
FROM well_log_result_layer
WHERE source_schema = 'SVN';
Если даты нет, возможно, вам потребуется скорректировать запрос, чтобы включить все возможные даты или только те, которые доступны.

6. Использование простого запроса для диагностики
Попробуйте выполнить упрощенный запрос, чтобы определить, на каком этапе происходит потеря данных. Например:

sql
Копировать код
SELECT wl.source_s, ft.name AS OILFIELD, wt.name AS WELL
FROM well_log_result_layer wl
JOIN pxp.well_table wt ON wt.well_s = wl.well_s
JOIN pxp.field_table ft ON wt.field_s = ft.field_s
WHERE wl.source_schema = 'SVN'
LIMIT 10;
Это поможет вам определить, возвращаются ли вообще какие-либо данные для SVN и есть ли связи между таблицами.

7. Отладка ошибок
Проверьте, есть ли какие-либо ошибки или предупреждения в логах базы данных (если они доступны), чтобы понять, есть ли проблема с запросом или соединениями таблиц.

Заключение
Если после выполнения этих шагов проблема остается, возможно, данные в SVN не полностью соответствуют структуре, используемой для VTK. В таком случае потребуется более детально исследовать содержимое таблиц или рассмотреть альтернативные методы обработки данных.

Если вы предоставите больше информации об ошибках или о том, какие данные (или поля) не выводятся, я смогу помочь более детально.



Этот SQL-запрос формирует результирующий набор данных из таблиц, связанных с геологическими слоями и результатами каротажа (логирования) скважин. Рассмотрим основные его части.

Основная структура
Запрос построен как подзапрос (from (...) d) с использованием конструкции UNION ALL, что объединяет две выборки с одинаковыми полями. В каждой части UNION ALL запрашиваются данные о слоях и характеристиках скважин из таблицы well_log_result_layer (сокращенно wl), таблицы скважин well_table (сокращенно wt) и таблицы месторождений field_table (сокращенно ft).

Поля и столбцы в запросе
wl.source_s — идентификатор источника данных.
ft.name AS OILFIELD — название месторождения, берется из таблицы field_table.
wt.name AS WELL — название скважины, берется из таблицы well_table.
KPLAST и KPLASTZONE — идентификаторы и названия пластов. Для определенных значений layer_s задается фиксированное значение ('Ю1(2+3)' или 'Ю1(М)'), иначе — название из таблицы layer.
H, L, Habs, Labs — глубины слоя, высота пласта, абсолютная глубина и абсолютная высота. Рассчитываются с использованием значений top, base, top_dsrd, base_dsrd.
Lit — литология слоя (тип породы), определяется по внешнему справочнику dict_table.
Collector — определяет, является ли слой коллектором (0 или 1).
Sat0 — степень насыщенности, определяется по справочнику dict_table.
R, APS, aGK, aNKT — параметры, полученные из таблицы well_log_result_layer.
Kpor, Kpr, Kgas, Kgl, Kng — характеристики пористости, проницаемости, газонасыщенности и глинистости слоя.
Условия фильтрации
Фильтр по источнику данных: wl.source_schema = 'SVN'.
Фильтр по скважинам: Внутренний подзапрос проверяет, чтобы well_s (идентификатор скважины) принадлежал к определенным источникам (идентификаторы различных исследований и организаций), перечисленных в подзапросе.
Дата результата: Для каждой скважины wl.result_date должно соответствовать последней дате измерений, что обеспечивается подзапросом select max(cwl.result_date).
Основные особенности
Подзапросы для получения значений по внешним справочникам (например, названия литологии, насыщенности).
Конструкция UNION ALL используется для объединения двух частей данных:
В первой части фильтруются скважины с определенными идентификаторами источников.
Во второй части выбираются скважины, у которых отсутствуют записи в этих источниках.
Выходной результат
Запрос выбирает все столбцы, представленные в подзапросе, используя SELECT d.*.
 Если данные не выводятся при выполнении этого SQL-запроса, возможные причины могут быть следующие:

1. Отсутствие данных с source_schema = 'SVN'
Убедитесь, что в таблице well_log_result_layer существуют строки, где значение столбца source_schema равно 'SVN'.
Вы можете выполнить следующий запрос, чтобы проверить наличие таких данных:
sql
Копировать код
SELECT COUNT(*) FROM well_log_result_layer WHERE source_schema = 'SVN';
Если результат — 0, это значит, что в таблице нет данных, соответствующих source_schema = 'SVN'.
2. Проблема с подзапросами
Подзапросы в выражениях CASE и других местах могут приводить к тому, что строки не возвращаются, если связанные таблицы (например, layer или pxp.dict_table) не содержат данных, соответствующих условиям соединения.
Проверьте, правильно ли указаны ключевые поля (layer_s, dict_s) и есть ли данные в этих таблицах, которые можно сопоставить с данными из well_log_result_layer.
3. Проблема с датами
Условие для выбора максимальной даты (result_date) может быть причиной отсутствия данных, если нет записей, соответствующих этому критерию.
Проверьте наличие данных с определенными датами, например, следующим образом:
sql
Копировать код
SELECT well_s, MAX(result_date) 
FROM well_log_result_layer 
WHERE source_schema = 'SVN'
GROUP BY well_s;
4. Использование объединения UNION ALL
Запрос использует объединение UNION ALL, что может повлиять на результат, если в одной из частей объединения нет данных. В этом случае объединение не вернет данные вообще.
Проверьте каждую часть запроса отдельно, чтобы увидеть, возвращает ли она строки. Например:
sql
Копировать код
-- Первая часть
SELECT ...
FROM well_log_result_layer wl, pxp.well_table wt, pxp.field_table ft
WHERE wl.source_schema = 'SVN' ...

-- Вторая часть
SELECT ...
FROM well_log_result_layer wl, pxp.well_table wt, pxp.field_table ft
WHERE wl.source_schema = 'SVN' ...
Выполните каждую часть по отдельности, чтобы убедиться, что они возвращают результаты.
5. Проблема с внешними соединениями
Если некоторые поля в подзапросах отсутствуют в таблицах well_table, field_table или других, то это может привести к тому, что запрос не вернет строки из-за отсутствия совпадений.
Попробуйте заменить соединения на внешние соединения (LEFT JOIN) для проверки.
6. Проблемы с таблицами и правами доступа
Убедитесь, что у вас есть доступ к таблицам well_log_result_layer, pxp.well_table, pxp.field_table, layer, pxp.dict_table. Если нет прав на чтение данных из этих таблиц, запрос не сможет вернуть данные.
Проверьте права доступа с помощью команды (если это поддерживается вашей СУБД):
sql
Копировать код
SHOW GRANTS FOR CURRENT_USER;
Рекомендация по отладке
Для упрощения отладки вы можете шаг за шагом проверять выполнение каждой части запроса. Например, сначала проверьте, что возвращают отдельные подзапросы, а затем объединяйте их по частям.

Попробуйте упростить запрос и постепенно добавляйте условия, чтобы понять, какое именно условие приводит к тому, что данные не выводятся.


