Ошибка `ORA-00001: unique constraint (SVN.WELLNODEUNIQ) violated` указывает на то, что при попытке вставить данные в таблицу `WELL_NODE`, нарушается уникальное ограничение, определенное на уровне таблицы.

### Причины ошибки
1. **Дублирующиеся данные:**
   - В таблице `pxp_test.well_node_external` есть строки, которые при сопоставлении с `pxp.well` и `pxp.reservoir` генерируют дублирующиеся комбинации значений.
   - Уникальное ограничение `SVN.WELLNODEUNIQ` требует, чтобы комбинация определенных столбцов была уникальной (например, `WELL_S`, `RESERVOIR_S`, `X`, `Y` или других столбцов, на которые наложено ограничение).

2. **Некорректная генерация данных для `WELL_NODE_S`:**
   - Если последовательность `pxp.pxp_seq` не синхронизирована с текущими значениями в таблице, возможно нарушение уникальности по первичному ключу (обычно `WELL_NODE_S`).

---

### Решение

#### 1. Убедитесь, что последовательность `pxp.pxp_seq` синхронизирована
Проверьте, что значение последовательности больше текущего максимального значения `WELL_NODE_S`:

```sql
DECLARE
    max_id NUMBER;
    seq_val NUMBER;
BEGIN
    -- Находим максимальное значение WELL_NODE_S
    SELECT MAX(WELL_NODE_S) INTO max_id FROM WELL_NODE;

    -- Проверяем текущее значение последовательности
    SELECT pxp.pxp_seq.CURRVAL INTO seq_val FROM dual;

    -- Если последовательность отстает, синхронизируем её
    IF seq_val <= max_id THEN
        EXECUTE IMMEDIATE 'ALTER SEQUENCE pxp.pxp_seq INCREMENT BY ' || (max_id + 1 - seq_val);
        EXECUTE IMMEDIATE 'SELECT pxp.pxp_seq.NEXTVAL FROM dual';
        EXECUTE IMMEDIATE 'ALTER SEQUENCE pxp.pxp_seq INCREMENT BY 1';
    END IF;
END;
/
```

---

#### 2. Удалите дублирующиеся строки
Используйте `DISTINCT` в запросе для предотвращения дублирования строк:

```sql
INSERT INTO WELL_NODE (
    WELL_NODE_S,
    WELL_S,
    RESERVOIR_S,
    X,
    Y,
    TYPE_S,
    LOADER_TYPE_S
)
SELECT DISTINCT
    pxp.pxp_seq.NEXTVAL AS WELL_NODE_S,
    w.WELL_S AS WELL_S,
    r.RESERVOIR_S AS RESERVOIR_S,
    e.X AS X,
    e.Y AS Y,
    295945703 AS TYPE_S,
    148127003 AS LOADER_TYPE_S
FROM pxp_test.well_node_external e
JOIN pxp.well w 
    ON w.NAME = e.name1
JOIN pxp.reservoir r 
    ON r.field_s = 27264586207
    AND r.name = e.name2
WHERE e.x IS NOT NULL
  AND e.y IS NOT NULL;
```

---

#### 3. Проверка существующих записей перед вставкой
Добавьте условие, чтобы вставлять только те записи, которые еще не существуют в таблице `WELL_NODE`:

```sql
INSERT INTO WELL_NODE (
    WELL_NODE_S,
    WELL_S,
    RESERVOIR_S,
    X,
    Y,
    TYPE_S,
    LOADER_TYPE_S
)
SELECT pxp.pxp_seq.NEXTVAL AS WELL_NODE_S,
       w.WELL_S AS WELL_S,
       r.RESERVOIR_S AS RESERVOIR_S,
       e.X AS X,
       e.Y AS Y,
       295945703 AS TYPE_S,
       148127003 AS LOADER_TYPE_S
FROM pxp_test.well_node_external e
JOIN pxp.well w 
    ON w.NAME = e.name1
JOIN pxp.reservoir r 
    ON r.field_s = 27264586207
    AND r.name = e.name2
WHERE e.x IS NOT NULL
  AND e.y IS NOT NULL
  AND NOT EXISTS (
      SELECT 1 
      FROM WELL_NODE wn
      WHERE wn.WELL_S = w.WELL_S
        AND wn.RESERVOIR_S = r.RESERVOIR_S
        AND wn.X = e.X
        AND wn.Y = e.Y
  );
```

---

### Итог
1. Убедитесь, что последовательность синхронизирована.
2. Используйте `DISTINCT`, чтобы убрать дублирующиеся строки в запросе.
3. Добавьте проверку существования записей через `NOT EXISTS`.

Эти шаги предотвратят нарушение уникального ограничения.



INSERT INTO WELL_NODE (
        WELL_NODE_S,
        WELL_S,
        RESERVOIR_S,
        X,
        Y,
        TYPE_S,
        LOADER_TYPE_S
    )
    SELECT pxp.pxp_seq.nextval WELL_NODE_S,
    w.WELL_S  WELL_S,
    r.reservoir_s RESERVOIR_S,
    e.x X,
    e.y  Y,
    295945703 TYPE_S,  --пластопересечение
    148127003 LOADER_TYPE_S
    FROM pxp_test.well_node_external e
    JOIN pxp.well w ON w.name = e.name1 -- связываем с таблицуй well по name 1
    JOIN pxp.reservoir r ON (r.field_s = 27264586207) AND (r.name = e.name2)
    WHERE e.x IS NOT NULL AND e.y IS NOT NULL
      -- Дополнительное условие для Y
  -- связываем с таблицей RESERVOIR по полям field_s, name
  --SELECT * FROM WELL_NODE
Error at line 3
ORA-00001: unique constraint (SVN.WELLNODEUNIQ) violated



-- Сначала синхронизируем последовательность pxp.pxp_seq с таблицей WELL_NODE
DECLARE
    max_id NUMBER;
    current_seq_val NUMBER;
BEGIN
    -- Находим максимальное значение в WELL_NODE_S
    SELECT MAX(WELL_NODE_S) INTO max_id FROM WELL_NODE;

    -- Получаем текущее значение последовательности
    SELECT pxp.pxp_seq.CURRVAL INTO current_seq_val FROM dual;

    -- Если последовательность отстает, продвигаем её значение выше max_id
    IF current_seq_val <= max_id THEN
        -- Устанавливаем INCREMENT временно, чтобы продвинуть последовательность
        EXECUTE IMMEDIATE 'ALTER SEQUENCE pxp.pxp_seq INCREMENT BY ' || (max_id + 1 - current_seq_val);
        
        -- Продвигаем последовательность
        EXECUTE IMMEDIATE 'SELECT pxp.pxp_seq.NEXTVAL FROM dual';

        -- Возвращаем INCREMENT к 1
        EXECUTE IMMEDIATE 'ALTER SEQUENCE pxp.pxp_seq INCREMENT BY 1';
    END IF;
END;
/
-- Теперь выполняем вставку данных из таблицы pxp_test.well_node_external
INSERT INTO WELL_NODE (
    WELL_NODE_S,
    WELL_S,
    RESERVOIR_S,
    X,
    Y,
    TYPE_S,
    LOADER_TYPE_S
)
SELECT 
    pxp.pxp_seq.NEXTVAL,  -- Генерация нового ID для WELL_NODE_S
    w.WELL_S,             -- Извлекаем WELL_S из таблицы WELL
    r.RESERVOIR_S,        -- Извлекаем RESERVOIR_S из таблицы RESERVOIR
    e.X,                  -- Извлекаем X из pxp_test.well_node_external
    e.Y,                  -- Извлекаем Y из pxp_test.well_node_external
    295945703,            -- Тип: пластопересечение
    148127003             -- Тип загрузчика
FROM 
    pxp_test.well_node_external e
JOIN 
    pxp.well w 
    ON w.NAME = e.name1   -- Связываем с таблицей WELL по name1
JOIN 
    pxp.reservoir r 
    ON r.field_s = w.FIELD_S
    AND r.name = e.name2  -- Связываем с таблицей RESERVOIR по полям field_s и name
WHERE 
    e.X IS NOT NULL  -- Дополнительное условие для X
    AND e.Y IS NOT NULL;  -- Дополнительное условие для Y




-- SELECT * FROM  PXP_TEST.WELL_NODE_EXTERNAL 

--select * from well_node

INSERT INTO WELL_NODE (
    WELL_NODE_S,
    WELL_S,
    RESERVOIR_S,
    X,
    Y,
    TYPE_S,
    LOADER_TYPE_S
)
     SELECT pxp.pxp_seq.nextval  WELL_NODE_S,
    (SELECT WELL_S FROM pxp.well WHERE NAME = (SELECT name1 FROM pxp_test.well_node_external))  WELL_S,
    (SELECT RESERVOIR_S 
     FROM pxp.reservoir 
     WHERE field_s IN (SELECT FIELD_S FROM PXP.WELL WHERE NAME = (SELECT name1 FROM pxp_test.well_node_external))
        AND (name = (SELECT name2 FROM pxp_test.well_node_external)))  RESERVOIR_S,
    (SELECT X FROM pxp_test.well_node_external)  X,
    (SELECT Y FROM pxp_test.well_node_external)  Y,
    295945703  TYPE_S,  --пластопересечение
    148127003 LOADER_TYPE_S
    FROM  dual;

INSERT INTO WELL_NODE (
    WELL_NODE_S,
    WELL_S,
    RESERVOIR_S,
    X,
    Y,
    TYPE_S,
    LOADER_TYPE_S
)
    SELECT d.pxp.pxp_seq.nextval WELL_NODE_S,
    (SELECT WELL_S FROM pxp.well WHERE NAME = external.name1)  WELL_S,
    (SELECT RESERVOIR_S 
     FROM pxp.reservoir 
     WHERE field_s IN (SELECT FIELD_S FROM PXP.WELL WHERE NAME = external.name1)
        AND (name = external.name2))  RESERVOIR_S,
    external.x  X,
    external.y  Y,
    295945703  TYPE_S,  --пластопересечение
    148127003 LOADER_TYPE_S
    FROM pxp_test.well_node_external external, dual d;



Ваш скрипт в целом правильный, но требует некоторых исправлений, чтобы он работал корректно. Вот основные замечания и исправления:

Проблема с синтаксисом в SQL-запросе. Вложенные скобки и форматирование строки INSERT нуждаются в корректировке.
Использование f-строки: Параметры X и Y нужно передавать через параметры, чтобы избежать SQL-инъекций и облегчить обработку.
Закрытие файла и соединения: файл и соединение следует корректно закрывать.
Проблема с nextval: SQL-синтаксис для pxp.pxp_seq.nextval должен быть скорректирован для корректного выполнения в SELECT.
Вот исправленный вариант кода:

import cx_Oracle

# Настройки подключения к Oracle
dsn = cx_Oracle.makedsn("192.168.252.113", "1521", service_name="PXPMSK")
connection = cx_Oracle.connect(user="ORN", password="ORN", dsn=dsn)

# Открываем текстовый файл для чтения
file1 = open("D:/plast2.txt", "r")
cursor = connection.cursor()

# Чтение строк файла и вставка данных в таблицу
while True:
    # Считываем строку
    line = file1.readline()
    if not line:
        break  # Прерываем цикл, если строка пустая

    # Разбиваем строку на категории, фильтруя пустые элементы
    res = line.split(" ")
    categories = [item for item in res if item]

    # Проверка, что в строке достаточно элементов для обработки
    if len(categories) < 6:
        print("Недостаточно данных в строке:", line)
        continue

    # Выполняем запрос на вставку данных
    cursor.execute("""
        INSERT INTO WELL_NODE (
            WELL_NODE_S,
            WELL_S,
            RESERVOIR_S,
            X,
            Y,
            TYPE_S,
            LOADER_TYPE_S
        )
        SELECT pxp.pxp_seq.nextval, 
               (SELECT WELL_S FROM pxp.well WHERE NAME = :name1),
               (SELECT RESERVOIR_S FROM pxp.reservoir WHERE field_s IN 
                  (SELECT FIELD_S FROM PXP.WELL WHERE NAME = :name1) AND name = :name2),
               :x,
               :y,
               295945703,
               S148127003
        FROM dual
    """, name1=categories[4], name2=categories[5], x=categories[0], y=categories[1])

# Закрываем файл и сохраняем изменения
file1.close()
connection.commit()

# Закрываем курсор и соединение
cursor.close()
connection.close()
Основные изменения:
Исправлена вставка параметров: x и y теперь передаются как параметры запроса вместо использования f-строки.
Добавлены проверки для количества элементов в categories, чтобы избежать ошибок, если в строке не хватает данных.
Корректное закрытие ресурсов: файл и соединение закрываются через .close().






Вы сказали:
напиши этот код на sql для вставки данных из таблицы excel 
ChatGPT сказал:
Для вставки данных из Excel в таблицу Oracle с использованием SQL, можно выполнить следующие шаги:

Сначала загрузите данные из Excel в промежуточную таблицу в Oracle. Это можно сделать с помощью утилит, таких как SQL*Loader или Oracle SQL Developer, или через внешние инструменты, такие как Oracle Data Integrator или Oracle SQL Developer.

Если у вас установлен Oracle SQL Developer:

Вы можете воспользоваться встроенной функцией импорта данных.
Вот как это сделать:
Откройте SQL Developer и подключитесь к вашей базе данных.
Щелкните правой кнопкой мыши на нужной таблице и выберите Import Data.
В появившемся мастере выберите файл Excel, из которого нужно импортировать данные.
Сопоставьте колонки Excel с колонками таблицы и завершите импорт.
Если вы предпочитаете SQL-код, используйте внешнюю таблицу:

Один из способов импортировать данные из файла Excel в Oracle с использованием SQL — это преобразовать Excel в CSV, создать внешнюю таблицу, а затем перенести данные из внешней таблицы в основную.
Вот пример:
Пример: Загрузка данных из CSV с помощью внешней таблицы
Сконвертируйте Excel в CSV.

Создайте DIRECTORY в Oracle (если еще не создан), указывающий на расположение CSV файла:

CREATE OR REPLACE DIRECTORY csv_dir AS '/path/to/csv';
GRANT READ, WRITE ON DIRECTORY csv_dir TO your_user;
Создайте внешнюю таблицу для чтения данных из CSV:

CREATE TABLE well_node_external (
    coord_x NUMBER,
    coord_y NUMBER,
    height NUMBER,
    depth NUMBER,
    code VARCHAR2(10),
    label VARCHAR2(10)
)
ORGANIZATION EXTERNAL (
    TYPE ORACLE_LOADER
    DEFAULT DIRECTORY csv_dir
    ACCESS PARAMETERS (
        RECORDS DELIMITED BY NEWLINE
        FIELDS TERMINATED BY ',' 
        MISSING FIELD VALUES ARE NULL
    )
    LOCATION ('data.csv')  -- Имя вашего CSV файла
)
REJECT LIMIT UNLIMITED;
Вставьте данные из внешней таблицы в основную таблицу:

INSERT INTO your_table (coord_x, coord_y, height, depth, code, label)
SELECT coord_x, coord_y, height, depth, code, label
FROM well_node_external;
Удалите внешнюю таблицу, если больше не нужна:

DROP TABLE well_node_external;
Дополнительные Заметки
Предоставьте доступ: Права на DIRECTORY должны быть предоставлены пользователю.
Формат CSV: Убедитесь, что значения в CSV разделены запятыми и совпадают по типу с вашей таблицей.





Вы сказали:
напши полный код sql
ChatGPT сказал:
Для загрузки данных из Excel в Oracle с использованием SQL вам необходимо выполнить несколько шагов, включая преобразование файла Excel в CSV и создание внешней таблицы в Oracle. Вот полный SQL-код для этого процесса:

Преобразование файла Excel в CSV (это необходимо сделать вручную или с помощью скрипта, так как Oracle напрямую не работает с Excel). Сохраните файл как data.csv.

Создание DIRECTORY в Oracle (каталога для доступа к CSV-файлу).

Создание внешней таблицы для доступа к CSV-файлу.

Вставка данных из внешней таблицы в основную таблицу.

Полный SQL-код
Шаг 1: Создание DIRECTORY для CSV-файла
Создайте каталог (DIRECTORY), указывающий на путь к файлу data.csv (замените '/path/to/csv' на фактический путь):

CREATE OR REPLACE DIRECTORY csv_dir AS '/path/to/csv';
GRANT READ, WRITE ON DIRECTORY csv_dir TO your_user;
Шаг 2: Создание основной таблицы (если она еще не создана)
Создайте основную таблицу, куда будут загружены данные:

CREATE TABLE well_node (
    coord_x NUMBER,
    coord_y NUMBER,
    height NUMBER,
    depth NUMBER,
    code VARCHAR2(10),
    label VARCHAR2(10)
);
Шаг 3: Создание внешней таблицы для чтения данных из CSV
Создайте внешнюю таблицу для чтения данных из data.csv. Предположим, что в CSV данные разделены запятыми, и их порядок соответствует структуре таблицы:

CREATE TABLE well_node_external (
    coord_x NUMBER,
    coord_y NUMBER,
    height NUMBER,
    depth NUMBER,
    code VARCHAR2(10),
    label VARCHAR2(10)
)
ORGANIZATION EXTERNAL (
    TYPE ORACLE_LOADER
    DEFAULT DIRECTORY csv_dir
    ACCESS PARAMETERS (
        RECORDS DELIMITED BY NEWLINE
        FIELDS TERMINATED BY ',' 
        MISSING FIELD VALUES ARE NULL
    )
    LOCATION ('data.csv')
)
REJECT LIMIT UNLIMITED;
Шаг 4: Перенос данных из внешней таблицы в основную таблицу
Теперь перенесите данные из внешней таблицы well_node_external в основную таблицу well_node:

INSERT INTO well_node (coord_x, coord_y, height, depth, code, label)
SELECT coord_x, coord_y, height, depth, code, label
FROM well_node_external;
Шаг 5: Проверка и удаление внешней таблицы (по желанию)
Проверьте, что данные успешно перенесены, а затем удалите внешнюю таблицу, если она больше не нужна:

DROP TABLE well_node_external;
Примечания:
Путь к CSV: Убедитесь, что путь к файлу в CREATE DIRECTORY и имя файла в LOCATION указаны корректно.
Права доступа: Права на DIRECTORY должны быть предоставлены пользователю базы данных.





Вы сказали:
по примеру этого запроса  INSERT INTO WELL_NODE
            (   
             WELL_NODE_S,
             WELL_S,
             RESERVOIR_S,
             X,
             Y,
             TYPE_S,
             LOADER_TYPE_S
            )
            SELECT pxp.pxp_seq.nextval WELL_NODE_S,
            (SELECT WELL_S FROM pxp.well WHERE NAME = :name1 WELL_S,
            (SELECT RESERVOIR_S FROM pxp.reservoir WHERE (field_s IN (SELECT FIELD_S FROM PXP.WELL WHERE NAME = :name1) AND (name = :name2)))) RESERVOIR_S,
            {categories[0]} X,
            {categories[1]} Y,
            295945703   TYPE_S,
            S148127003  LOADER_TYPE_S
        FROM dual """,
ChatGPT сказал:
Для выполнения SQL-запроса, который вставляет данные в таблицу WELL_NODE на основе внешней таблицы с данными, необходимо сделать следующие шаги, учитывая логику и структуру вашего первоначального запроса.

Здесь я покажу полный SQL-код, используя внешний CSV-файл, который мы вставляем в WELL_NODE. Мы предполагаем, что в CSV есть столбцы с координатами X, Y, а также name1 и name2, которые соответствуют полям WELL_S и RESERVOIR_S.

Полный SQL-код
Шаг 1: Создайте DIRECTORY для CSV-файла
CREATE OR REPLACE DIRECTORY csv_dir AS '/path/to/csv';
GRANT READ, WRITE ON DIRECTORY csv_dir TO your_user;
Шаг 2: Создайте внешнюю таблицу для данных из CSV
Предположим, что данные CSV имеют структуру: coord_x, coord_y, name1, name2. Эти данные будут использоваться для выполнения вложенных запросов в основном SQL-запросе.

CREATE TABLE well_node_external (
    coord_x NUMBER,
    coord_y NUMBER,
    name1 VARCHAR2(50),
    name2 VARCHAR2(50)
)
ORGANIZATION EXTERNAL (
    TYPE ORACLE_LOADER
    DEFAULT DIRECTORY csv_dir
    ACCESS PARAMETERS (
        RECORDS DELIMITED BY NEWLINE
        FIELDS TERMINATED BY ',' 
        MISSING FIELD VALUES ARE NULL
    )
    LOCATION ('data.csv')
)
REJECT LIMIT UNLIMITED;
Шаг 3: Вставьте данные из внешней таблицы в основную таблицу
Теперь используем ваш шаблон запроса, чтобы вставить данные из внешней таблицы well_node_external в основную таблицу WELL_NODE:

INSERT INTO WELL_NODE (
    WELL_NODE_S,
    WELL_S,
    RESERVOIR_S,
    X,
    Y,
    TYPE_S,
    LOADER_TYPE_S
)
SELECT 
    pxp.pxp_seq.nextval AS WELL_NODE_S,
    (SELECT WELL_S FROM pxp.well WHERE NAME = external.name1) AS WELL_S,
    (SELECT RESERVOIR_S 
     FROM pxp.reservoir 
     WHERE field_s IN (SELECT FIELD_S FROM PXP.WELL WHERE NAME = external.name1)
       AND name = external.name2) AS RESERVOIR_S,
    external.coord_x AS X,
    external.coord_y AS Y,
    295945703 AS TYPE_S,
    S148127003 AS LOADER_TYPE_S
FROM well_node_external external;
Объяснение кода
pxp.pxp_seq.nextval: Генерация нового значения для WELL_NODE_S с помощью последовательности pxp.pxp_seq.
Вложенные подзапросы:
(SELECT WELL_S FROM pxp.well WHERE NAME = external.name1) находит значение WELL_S на основе name1.
(SELECT RESERVOIR_S FROM pxp.reservoir WHERE field_s IN (SELECT FIELD_S FROM PXP.WELL WHERE NAME = external.name1) AND name = external.name2) находит RESERVOIR_S на основе field_s и name2.
Поля X и Y: external.coord_x и external.coord_y берутся из внешней таблицы well_node_external.
Постоянные значения: TYPE_S и LOADER_TYPE_S заданы как константы.
Шаг 4: Удалите внешнюю таблицу после завершения (если больше не нужна)
DROP TABLE well_node_external;
Этот SQL-код должен корректно вставить данные из CSV-файла в таблицу WELL_NODE с использованием структуры, аналогичной вашему запросу.









ChatGPT может допускать ошибки. Рекомендуем проверять важную информацию.


import cx_Oracle

# Настройки подключения к Oracle
dsn = cx_Oracle.makedsn("192.168.252.113", "1521", service_name="PXPMSK")
connection = cx_Oracle.connect(user="ORN", password="ORN", dsn=dsn)

# получим объект файла
file1 = open("D:/plast2.txt", "r")
#cursor = connection.cursor()
#cursor.execute("""call pxp.fw_pkg.setUser(1, 1, null, null, null, null, 'OIL_ORN'"""))

while True:
    # считываем строку
    line = file1.readline()
    # прерываем цикл, если строка пустая
    if not line:
        break
    categories = []
    #print(line.split("")[5])
    res = line.split(" ")
    for i in range(len(res)):
        if res[i]:
            categories.append(res[i])
    print(categories[5])

    # выводим строку
        cursor.execute("""
        INSERT INTO WELL_NODE
            (   
             WELL_NODE_S,
             WELL_S,
             RESERVOIR_S,
             X,
             Y,
             TYPE_S,
             LOADER_TYPE_S
            )
            SELECT pxp.pxp_seq.nextval WELL_NODE_S,
            (SELECT WELL_S FROM pxp.well WHERE NAME = :name1 WELL_S,
            (SELECT RESERVOIR_S FROM pxp.reservoir WHERE (field_s IN (SELECT FIELD_S FROM PXP.WELL WHERE NAME = :name1) AND (name = :name2)))) RESERVOIR_S,
            {categories[0]} X,
            {categories[1]} Y,
            295945703   TYPE_S,
            S148127003  LOADER_TYPE_S
        FROM dual """,
        name1 = categories[4]
        name2 = categories[5]
        )

# закрываем файл
file1.close



Для того чтобы вставить данные из текстового документа в таблицу в Oracle, нужно выполнить следующие шаги:

Подготовьте таблицу в базе данных. Предположим, что она уже существует и имеет структуру, подходящую для ваших данных. В противном случае создайте таблицу с нужными колонками. Пример таблицы может выглядеть так:
import cx_Oracle

# Настройки подключения к Oracle

dsn = cx_Oracle.makedsn("192.168.252.113", "port", service_name="PXPMSK")
connection = cx_Oracle.connect(user="ORN", password="ORN", dsn=dsn)


# получим объект файла
file1 = open("D:/plast.txt", "r")

#cursor = connection.cursor()
#cursor.execute("""call pxp.fw_pkg.setUser(1, 1, null, null, null, null, 'OIL_ORN'"""))

while True:
    # считываем строку
    line = file1.readline()
    categories = []
    #print(line.split("")[5])
    res = line.split(" ")
    for i in range(len(res)):
        if res[i]:
            categories.append(res[i])
    print(categories)

    # прерываем цикл, если строка пустая
    if not line:
        break
    # выводим строку
    #print(categories[1])
        cursor.execute("""
        INSERT INTO RESERVOIR_SET_table
            (   
             WELL_NODE_S,
             WELL_S,
             RESERVOIR_S,
             X,
             Y,
             TYPE_S
            )
            SELECT pxp.pxp_seq.nextval WELL_NODE_S,
            SELECT WELL_S FROM well WHERE NAME = categories[4] WELL_S,
            SELECT RESERVOIR_S FROM pxp.reservoir WHERE (field_s IN (SELECT FIELD_S FROM PXP.WELL WHERE NAME = categories[4])) AND (name = categories[5]) RESERVOIR_S,
            categories[0] X,
            categories[1] Y,
            SELECT DISTINCT(TYPE_S) FROM reservoir_SET_table WHERE FIELD_S IN (SELECT FIELD_S FROM PXP.WELL WHERE NAME = categories[4]) TYPE_S
        FROM dual; """)

# закрываем файл
file1.close

 

#
sql
Копировать код
CREATE TABLE your_table (
    coord_x NUMBER,
    coord_y NUMBER,
    height NUMBER,
    depth NUMBER,
    code VARCHAR2(10),
    label VARCHAR2(10)
);
Загрузите данные из файла в Oracle. Для этого можно использовать утилиту SQL*Loader или PL/SQL. Здесь будет показан пример на PL/SQL с использованием временной таблицы и чтения файла построчно.

Используйте PL/SQL для чтения и вставки данных. Пример процедуры для загрузки файла data.txt в таблицу:

sql
Копировать код
DECLARE
    file_handle UTL_FILE.FILE_TYPE;
    line VARCHAR2(1000);
    coord_x NUMBER;
    coord_y NUMBER;
    height NUMBER;
    depth NUMBER;
    code VARCHAR2(10);
    label VARCHAR2(10);
BEGIN
    -- Укажите путь к вашему файлу
    file_handle := UTL_FILE.FOPEN('DIRECTORY_PATH', 'data.txt', 'r');

    LOOP
        BEGIN
            -- Чтение строки из файла
            UTL_FILE.GET_LINE(file_handle, line);

            -- Разбор строки и извлечение данных
            coord_x := TO_NUMBER(SUBSTR(line, 1, 11));
            coord_y := TO_NUMBER(SUBSTR(line, 13, 11));
            height := TO_NUMBER(SUBSTR(line, 25, 7));
            depth := TO_NUMBER(SUBSTR(line, 33, 7));
            code := TRIM(SUBSTR(line, 41, 5));
            label := TRIM(SUBSTR(line, 48, 10));

            -- Вставка данных в таблицу
            INSERT INTO your_table (coord_x, coord_y, height, depth, code, label)
            VALUES (coord_x, coord_y, height, depth, code, label);

        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                EXIT;  -- Прекращаем чтение файла при его завершении
        END;
    END LOOP;

    UTL_FILE.FCLOSE(file_handle);
END;
Заметка: Для корректной работы процедуры необходимо настроить DIRECTORY в Oracle, указывающий на путь к файлу.

Создайте DIRECTORY в Oracle (если он еще не создан) и предоставьте права на него:

sql
Копировать код
CREATE OR REPLACE DIRECTORY directory_path AS '/path/to/your/file';
GRANT READ, WRITE ON DIRECTORY directory_path TO your_user;
Запустите скрипт, чтобы вставить данные в таблицу.

После выполнения этих шагов ваши данные из текстового файла будут успешно добавлены в таблицу Oracle.






Вы сказали:
на питоне
ChatGPT сказал:
ChatGPT
Чтобы вставить данные из текстового файла в таблицу Oracle с помощью Python, можно использовать библиотеку cx_Oracle. Вот пошаговый пример кода:

Установите библиотеку cx_Oracle, если она еще не установлена:

bash
Копировать код
pip install cx_Oracle
Подключитесь к базе данных Oracle и прочитайте файл, разбивая его на отдельные значения. Затем вставьте эти значения в таблицу.

Вот пример кода на Python, который делает это:

python
Копировать код
import cx_Oracle

# Настройки подключения к Oracle
dsn = cx_Oracle.makedsn("host", "port", service_name="service_name")
connection = cx_Oracle.connect(user="username", password="password", dsn=dsn)

# Открываем текстовый файл и считываем данные построчно
with open("data.txt", "r") as file:
    cursor = connection.cursor()
    
    # Обход строк файла и вставка данных в таблицу
    for line in file:
        # Разбиваем строку на нужные значения
        coord_x = float(line[0:11].strip())
        coord_y = float(line[12:23].strip())
        height = float(line[24:31].strip())
        depth = float(line[32:39].strip())
        code = line[40:45].strip()
        label = line[46:].strip()

        # Вставка данных в таблицу
        cursor.execute("""
            INSERT INTO your_table (coord_x, coord_y, height, depth, code, label) 
            VALUES (:1, :2, :3, :4, :5, :6)
        """, (coord_x, coord_y, height, depth, code, label))
    
    # Сохранение изменений
    connection.commit()

# Закрытие подключения
cursor.close()
connection.close()

for i in range():

	INSERT INTO RESERVOIR_SET_table
		(   
		 WELL_NODE_S,
		 WELL_S,
		 RESERVOIR_S,
		 X,
		 Y
		)
		SELECT pxp.pxp_seq.nextval RESERVOIR_SET_S,
		 'Д5-4' NAME,
		  27284778007 FIELD_S,
		  686949714 TYPE_S
		FROM dual; 
#Petrel Well Tops
VERSION 2
#BEGIN HEADER
X
Y
Z
MD
Surface Name
Well Name
#END HEADER
12364684.70 6828374.40 1383.90 1448.00    425PI      Κ-ΒΚ1
12364684.70 6828374.93 1404.89 1469.00    425PI      Ο-ΒΚ1
12364684.70 6828374.96 1406.09 1470.20    425PI      Κ-ΒΚ2
12364684.70 6828375.26 1417.69 1481.80    425PI      Ο-ΒΚ2
12364684.70 6828375.29 1418.89 1483.00    425PI      Κ-ΒΚ3
12364684.70 6828375.70 1435.28 1499.40    425PI      Ο-ΒΚ3
12364466.18 6827025.84 1376.37 1639.50    419PI      Κ-ΒΚ1
12364448.64 6827022.39 1396.74 1666.60    419PI      Ο-ΒΚ1
12364447.08 6827022.09 1398.53 1669.00    419PI      Κ-ΒΚ2
12364435.62 6827019.89 1411.71 1686.60    419PI      Ο-ΒΚ2
12364434.71 6827019.72 1412.75 1688.00    419PI      Κ-ΒΚ3
12364420.91 6827017.21 1428.11 1708.80    419PI      Ο-ΒΚ3
12370721.39 6832488.05 1391.56 1704.50    201PI      Κ-ΒΚ1
12370724.62 6832506.33 1410.33 1730.90    201PI      Ο-ΒΚ1
12370724.78 6832507.23 1411.25 1732.20    201PI      Κ-ΒΚ2
12370727.20 6832520.99 1424.99 1751.80    201PI      Ο-ΒΚ2
12370727.48 6832522.61 1426.60 1754.10    201PI      Κ-ΒΚ3
12370730.06 6832537.30 1441.10 1774.90    201PI      Ο-ΒΚ3
12371124.74 6832425.33 1397.91 1799.40    200PI      Κ-ΒΚ1
12371138.52 6832443.31 1415.53 1828.10    200PI      Ο-ΒΚ1
12371139.52 6832444.64 1416.81 1830.20    200PI      Κ-ΒΚ2
12371150.21 6832458.76 1430.36 1852.50    200PI      Ο-ΒΚ2
12371151.55 6832460.54 1432.06 1855.30    200PI      Κ-ΒΚ3
12371165.74 6832479.24 1449.76 1884.70    200PI      Ο-ΒΚ3
12370667.66 6831917.95 1391.51 1433.50      1PI      Κ-ΒΚ1
12370667.22 6831917.73 1412.40 1454.40      1PI      Ο-ΒΚ1
12370667.18 6831917.72 1413.90 1455.90      1PI      Κ-ΒΚ2
12370666.81 6831917.61 1428.39 1470.40      1PI      Ο-ΒΚ2
12370666.78 6831917.60 1429.89 1471.90      1PI      Κ-ΒΚ3
12370666.41 6831917.55 1444.09 1486.10      1PI      Ο-ΒΚ3
12364641.89 6826650.02 1376.98 1629.70    411PI      Κ-ΒΚ1
12364632.00 6826639.61 1395.83 1653.40    411PI      Ο-ΒΚ1
12364631.25 6826638.82 1397.26 1655.20    411PI      Κ-ΒΚ2
12372456.72 6820785.80 1382.90 1437.70    165PI      Κ-ΒΚ1
12372456.72 6820785.80 1406.00 1460.80    165PI      Ο-ΒΚ1
12372456.72 6820785.80 1406.60 1461.40    165PI      Κ-ΒΚ2
12372456.72 6820785.80 1420.70 1475.50    165PI      Ο-ΒΚ2
12372456.72 6820785.80 1422.20 1477.00    165PI      Κ-ΒΚ3
12372456.72 6820785.80 1436.00 1490.80    165PI      Ο-ΒΚ3
12368838.06 6821277.79 1370.30 1434.20    167PI      Κ-ΒΚ1
12368838.00 6821276.88 1392.48 1456.40    167PI      Ο-ΒΚ1
12368838.00 6821276.83 1393.48 1457.40    167PI      Κ-ΒΚ2
12368837.99 6821276.35 1405.17 1469.10    167PI      Ο-ΒΚ2
12368837.99 6821276.31 1406.07 1470.00    167PI      Κ-ΒΚ3
12368838.01 6821275.61 1421.95 1485.90    167PI      Ο-ΒΚ3
12379046.88 6815215.33 1401.80 1453.80   603RTl      Κ-ΒΚ1
12379046.88 6815215.33 1427.20 1479.20   603RTl      Ο-ΒΚ1
12379046.88 6815215.33 1429.00 1481.00   603RTl      Κ-ΒΚ2
12379046.88 6815215.33 1441.80 1493.80   603RTl      Ο-ΒΚ2
12383019.66 6807942.32 1422.70 1470.70  20073PI      Κ-ΒΚ1
12383019.66 6807942.32 1443.40 1491.40  20073PI      Ο-ΒΚ1
12383019.66 6807942.32 1444.90 1492.90  20073PI      Κ-ΒΚ2
12383019.66 6807942.32 1457.30 1505.30  20073PI      Ο-ΒΚ2
12392038.56 6804432.39 1464.76 1512.50    140PI      Κ-ΒΚ1
12392038.56 6804432.67 1486.06 1533.80    140PI      Ο-ΒΚ1
12392038.56 6804432.69 1487.96 1535.70    140PI      Κ-ΒΚ2
12392038.56 6804432.85 1500.46 1548.20    140PI      Ο-ΒΚ2
12392038.56 6804432.86 1501.06 1548.80    140PI      Κ-ΒΚ3
12392038.56 6804433.06 1516.36 1564.10    140PI      Ο-ΒΚ3
12396270.00 6796560.87 1465.36 1506.00    141PI      Κ-ΒΚ1
12396270.00 6796560.98 1481.96 1522.60    141PI      Ο-ΒΚ1
12396270.00 6796560.99 1483.66 1524.30    141PI      Κ-ΒΚ2
12396270.00 6796561.07 1501.26 1541.90    141PI      Ο-ΒΚ2
12396270.00 6796561.07 1502.26 1542.90    141PI      Κ-ΒΚ3
12396270.00 6796561.13 1516.36 1557.00    141PI      Ο-ΒΚ3
12387220.40 6793424.73 1446.00 1496.00    159PI      Κ-ΒΚ1
12387220.40 6793424.73 1467.20 1517.20    159PI      Ο-ΒΚ1
12387220.40 6793424.73 1469.00 1519.00    159PI      Κ-ΒΚ2
12387220.40 6793424.73 1480.80 1530.80    159PI      Ο-ΒΚ2
12387220.40 6793424.73 1481.10 1531.10    159PI      Κ-ΒΚ3
12387220.40 6793424.73 1498.40 1548.40    159PI      Ο-ΒΚ3
12388233.44 6797109.14 1456.10 1505.40    154PI      Κ-ΒΚ1
12388233.44 6797109.14 1474.10 1523.40    154PI      Ο-ΒΚ1
12388233.44 6797109.14 1475.90 1525.20    154PI      Κ-ΒΚ2
12388233.44 6797109.14 1490.70 1540.00    154PI      Ο-ΒΚ2
12388233.44 6797109.14 1491.70 1541.00    154PI      Κ-ΒΚ3
12388233.44 6797109.14 1507.80 1557.10    154PI      Ο-ΒΚ3
12390547.51 6794242.61 1459.51 1496.40    803PI      Κ-ΒΚ1
12390547.52 6794242.16 1476.90 1513.80    803PI      Ο-ΒΚ1
12390547.52 6794242.11 1478.80 1515.70    803PI      Κ-ΒΚ2
12390547.55 6794241.65 1495.30 1532.20    803PI      Ο-ΒΚ2
12390547.56 6794241.57 1498.00 1534.90    803PI      Κ-ΒΚ3
12390547.61 6794241.17 1510.99 1547.90    803PI      Ο-ΒΚ3
12390082.24 6792104.35 1446.66 1491.20    107PI      Κ-ΒΚ1
12390082.24 6792104.58 1464.46 1509.00    107PI      Ο-ΒΚ1
12390082.24 6792104.60 1465.86 1510.40    107PI      Κ-ΒΚ2
12390082.24 6792104.78 1479.86 1524.40    107PI      Ο-ΒΚ2
12390082.24 6792104.81 1481.66 1526.20    107PI      Κ-ΒΚ3
12390082.24 6792105.03 1498.56 1543.10    107PI      Ο-ΒΚ3
12393090.60 6791381.10 1449.39 1497.40    106PI      Κ-ΒΚ1
12393090.60 6791381.21 1464.99 1513.00    106PI      Ο-ΒΚ1
12393090.60 6791381.22 1466.99 1515.00    106PI      Κ-ΒΚ2
12393090.60 6791381.33 1483.38 1531.40    106PI      Ο-ΒΚ2
12393090.60 6791381.34 1484.58 1532.60    106PI      Κ-ΒΚ3
12393090.60 6791381.43 1498.68 1546.70    106PI      Ο-ΒΚ3
12396059.41 6789443.34 1451.36 1495.70    108PI      Κ-ΒΚ1
12396059.41 6789443.56 1468.16 1512.50    108PI      Ο-ΒΚ1
12396059.41 6789443.58 1470.06 1514.40    108PI      Κ-ΒΚ2
12396059.41 6789443.79 1485.46 1529.80    108PI      Ο-ΒΚ2
12396059.41 6789443.80 1486.36 1530.70    108PI      Κ-ΒΚ3
12396059.41 6789443.98 1500.66 1545.00    108PI      Ο-ΒΚ3
12387115.46 6838309.66 1437.20 1464.70     47VI      Κ-ΒΚ1
12387115.86 6838308.99 1459.38 1486.90     47VI      Ο-ΒΚ1
12387115.88 6838308.95 1460.88 1488.40     47VI      Κ-ΒΚ2
12387116.08 6838308.59 1472.48 1500.00     47VI      Ο-ΒΚ2
12387116.09 6838308.56 1473.48 1501.00     47VI      Κ-ΒΚ3
12387116.33 6838308.02 1490.47 1518.00     47VI      Ο-ΒΚ3
12377381.39 6838667.54 1431.73 1477.70     40VI      Κ-ΒΚ1
12377381.39 6838668.66 1455.20 1501.20     40VI      Ο-ΒΚ1
12377381.39 6838668.74 1457.00 1503.00     40VI      Κ-ΒΚ2
12377381.39 6838669.22 1467.39 1513.40     40VI      Ο-ΒΚ2
12377381.39 6838669.26 1468.19 1514.20     40VI      Κ-ΒΚ3
12377381.39 6838669.97 1483.87 1529.90     40VI      Ο-ΒΚ3
12381491.94 6838630.84 1444.94 1483.60    433VI      Κ-ΒΚ1
12381492.79 6838630.22 1468.31 1507.00    433VI      Ο-ΒΚ1
12381492.85 6838630.17 1470.01 1508.70    433VI      Κ-ΒΚ2
12381493.20 6838629.93 1479.80 1518.50    433VI      Ο-ΒΚ2
12381493.22 6838629.92 1480.10 1518.80    433VI      Κ-ΒΚ3
12381493.84 6838629.46 1497.78 1536.50    433VI      Ο-ΒΚ3
12384246.90 6836677.47 1446.69 1481.90     41VI      Κ-ΒΚ1
12384247.40 6836678.12 1470.77 1506.00     41VI      Ο-ΒΚ1
12384247.42 6836678.14 1471.77 1507.00     41VI      Κ-ΒΚ2
12384247.65 6836678.41 1483.37 1518.60     41VI      Ο-ΒΚ2
12384247.66 6836678.42 1483.97 1519.20     41VI      Κ-ΒΚ3
12384247.95 6836678.74 1499.26 1534.50     41VI      Ο-ΒΚ3
12384079.60 6834991.60 1448.64 1635.10   1035VI      Κ-ΒΚ1
12384071.40 6834999.34 1469.71 1659.00   1035VI      Ο-ΒΚ1
12384071.40 6834999.34 1469.71 1659.00   1035VI      Κ-ΒΚ2
12384065.50 6835005.05 1485.50 1676.80   1035VI      Ο-ΒΚ2
12384065.17 6835005.37 1486.39 1677.80   1035VI      Κ-ΒΚ3
12384059.12 6835011.29 1502.84 1696.30   1035VI      Ο-ΒΚ3
12384047.84 6834010.86 1444.87 1686.40   2520VI      Κ-ΒΚ1
12384038.65 6834001.36 1467.14 1712.30   2520VI      Ο-ΒΚ1
12384038.15 6834000.85 1468.34 1713.70   2520VI      Κ-ΒΚ2
12384032.82 6833995.58 1480.99 1728.40   2520VI      Ο-ΒΚ2
12384032.82 6833995.58 1480.99 1728.40   2520VI      Κ-ΒΚ3
12384025.40 6833988.16 1498.71 1749.00   2520VI      Ο-ΒΚ3
12388046.97 6834673.63 1442.86 1470.00     48VI      Κ-ΒΚ1
12388046.73 6834673.74 1465.36 1492.50     48VI      Ο-ΒΚ1
12388046.71 6834673.76 1467.06 1494.20     48VI      Κ-ΒΚ2
12388046.59 6834673.86 1477.86 1505.00     48VI      Ο-ΒΚ2
12388046.56 6834673.88 1479.85 1507.00     48VI      Κ-ΒΚ3
12388046.38 6834674.06 1494.35 1521.50     48VI      Ο-ΒΚ3
12376378.83 6833340.15 1415.41 1454.40    460VI      Κ-ΒΚ1
12376378.37 6833340.81 1437.39 1476.40    460VI      Ο-ΒΚ1
12376378.35 6833340.85 1438.59 1477.60    460VI      Κ-ΒΚ2
12376378.12 6833341.21 1450.98 1490.00    460VI      Ο-ΒΚ2
12376378.10 6833341.23 1451.68 1490.70    460VI      Κ-ΒΚ3
12376377.79 6833341.71 1468.37 1507.40    460VI      Ο-ΒΚ3
12376938.29 6843001.70 1420.74 1468.60     52VI      Κ-ΒΚ1
12376939.05 6843000.60 1442.00 1489.90     52VI      Ο-ΒΚ1
12376939.12 6843000.50 1443.89 1491.80     52VI      Κ-ΒΚ2
12376939.53 6842999.85 1455.37 1503.30     52VI      Ο-ΒΚ2
12376939.58 6842999.74 1457.07 1505.00     52VI      Κ-ΒΚ3
12376940.07 6842998.85 1471.63 1519.60     52VI      Ο-ΒΚ3
12380575.27 6843266.49 1432.72 1476.80    453VI      Κ-ΒΚ1
12380574.69 6843267.38 1456.10 1500.20    453VI      Ο-ΒΚ1
12380574.65 6843267.45 1457.90 1502.00    453VI      Κ-ΒΚ2
12380574.41 6843267.85 1468.49 1512.60    453VI      Ο-ΒΚ2
12380574.39 6843267.87 1469.19 1513.30    453VI      Κ-ΒΚ3
12380573.97 6843268.53 1487.07 1531.20    453VI      Ο-ΒΚ3
12385141.00 6843087.61 1435.59 1467.70    442VI      Κ-ΒΚ1
12385141.00 6843088.24 1457.18 1489.30    442VI      Ο-ΒΚ1
12385141.00 6843088.27 1458.18 1490.30    442VI      Κ-ΒΚ2
12385141.00 6843088.65 1471.38 1503.50    442VI      Ο-ΒΚ2
12385141.00 6843088.67 1472.17 1504.30    442VI      Κ-ΒΚ3
12385141.00 6843089.10 1487.57 1519.70    442VI      Ο-ΒΚ3
12390651.90 6841992.95 1419.71 1452.00     25VI      Κ-ΒΚ1
12390651.00 6841992.42 1441.39 1473.70     25VI      Ο-ΒΚ1
12390650.95 6841992.39 1442.58 1474.90     25VI      Κ-ΒΚ2
12390650.47 6841992.04 1454.47 1486.80     25VI      Ο-ΒΚ2
12390650.44 6841992.01 1455.27 1487.60     25VI      Κ-ΒΚ3
12390649.86 6841991.56 1470.05 1502.40     25VI      Ο-ΒΚ3
12383016.81 6833387.23 1437.40 1472.40    431VI      Κ-ΒΚ1
12383016.81 6833387.94 1459.19 1494.20    431VI      Ο-ΒΚ1
12383016.81 6833388.00 1460.79 1495.80    431VI      Κ-ΒΚ2
12383016.81 6833388.37 1472.79 1507.80    431VI      Ο-ΒΚ2
12383016.81 6833388.39 1473.39 1508.40    431VI      Κ-ΒΚ3
12383016.81 6833388.86 1488.78 1523.80    431VI      Ο-ΒΚ3
12384524.98 6833440.79 1448.10 1918.40   2521VI      Κ-ΒΚ1
12384525.51 6833418.31 1471.70 1951.00   2521VI      Ο-ΒΚ1
12384525.54 6833417.35 1472.72 1952.40   2521VI      Κ-ΒΚ2
12384525.99 6833404.22 1486.58 1971.50   2521VI      Ο-ΒΚ2
12384526.04 6833402.91 1487.96 1973.40   2521VI      Κ-ΒΚ3
12384526.48 6833389.78 1501.82 1992.50   2521VI      Ο-ΒΚ3
12389822.38 6832411.16 1461.22 1494.40    448VI      Κ-ΒΚ1
12389822.66 6832411.98 1484.30 1517.50    448VI      Ο-ΒΚ1
12389822.68 6832412.04 1486.00 1519.20    448VI      Κ-ΒΚ2
12389822.82 6832412.42 1496.79 1530.00    448VI      Ο-ΒΚ2
12389822.83 6832412.44 1497.39 1530.60    448VI      Κ-ΒΚ3
12389823.10 6832413.03 1514.38 1547.60    448VI      Ο-ΒΚ3
12378204.36 6830074.47 1410.00 1440.00    404VI      Κ-ΒΚ1
12378204.36 6830074.90 1432.90 1462.90    404VI      Ο-ΒΚ1
12378204.36 6830074.93 1434.40 1464.40    404VI      Κ-ΒΚ2
12378204.36 6830075.16 1446.30 1476.30    404VI      Ο-ΒΚ2
12378204.36 6830075.17 1446.90 1476.90    404VI      Κ-ΒΚ3
12378204.36 6830075.45 1461.10 1491.10    404VI      Ο-ΒΚ3
12382458.28 6830739.50 1429.39 1457.70    400VI      Κ-ΒΚ1
12382458.28 6830740.32 1452.67 1481.00    400VI      Ο-ΒΚ1
12382458.28 6830740.35 1453.47 1481.80    400VI      Κ-ΒΚ2
12382458.28 6830740.85 1467.87 1496.20    400VI      Ο-ΒΚ2
12382458.28 6830740.87 1468.46 1496.80    400VI      Κ-ΒΚ3
12382458.28 6830741.35 1482.16 1510.50    400VI      Ο-ΒΚ3
12386175.70 6830907.76 1450.52 1479.70     76VI      Κ-ΒΚ1
12386175.70 6830908.37 1473.72 1502.90     76VI      Ο-ΒΚ1
12386175.70 6830908.42 1475.42 1504.60     76VI      Κ-ΒΚ2
12386175.70 6830908.72 1487.21 1516.40     76VI      Ο-ΒΚ2
12386175.70 6830908.75 1488.31 1517.50     76VI      Κ-ΒΚ3
12386175.70 6830909.17 1504.31 1533.50     76VI      Ο-ΒΚ3
12391545.13 6828663.63 1455.28 1492.80    429VI      Κ-ΒΚ1
12391545.13 6828664.41 1475.76 1513.30    429VI      Ο-ΒΚ1
12391545.13 6828664.45 1476.96 1514.50    429VI      Κ-ΒΚ2
12391545.13 6828664.98 1491.45 1529.00    429VI      Ο-ΒΚ2
12391545.13 6828665.01 1492.15 1529.70    429VI      Κ-ΒΚ3
12391545.13 6828665.62 1509.64 1547.20    429VI      Ο-ΒΚ3
12390999.00 6825579.50 1462.20 1501.20    436VI      Κ-ΒΚ1
12390999.00 6825579.50 1485.00 1524.00    436VI      Ο-ΒΚ1
12390999.00 6825579.50 1486.00 1525.00    436VI      Κ-ΒΚ2
12390999.00 6825579.50 1498.90 1537.90    436VI      Ο-ΒΚ2
12390999.00 6825579.50 1499.70 1538.70    436VI      Κ-ΒΚ3
12390999.00 6825579.50 1515.60 1554.60    436VI      Ο-ΒΚ3
12384431.53 6825204.10 1443.39 1478.80    408VI      Κ-ΒΚ1
12384431.53 6825204.81 1463.67 1499.10    408VI      Ο-ΒΚ1
12384431.53 6825204.89 1465.87 1501.30    408VI      Κ-ΒΚ2
12384431.53 6825205.29 1476.77 1512.20    408VI      Ο-ΒΚ2
12384431.53 6825205.32 1477.46 1512.90    408VI      Κ-ΒΚ3
12384431.53 6825206.05 1496.65 1532.10    408VI      Ο-ΒΚ3
12378540.98 6825547.87 1412.51 1451.30      1VI      Κ-ΒΚ1
12378540.41 6825547.83 1434.20 1473.00      1VI      Ο-ΒΚ1
12378540.38 6825547.82 1435.60 1474.40      1VI      Κ-ΒΚ2
12378540.06 6825547.79 1447.80 1486.60      1VI      Ο-ΒΚ2
12378540.04 6825547.79 1448.60 1487.40      1VI      Κ-ΒΚ3
12378539.60 6825547.75 1465.19 1504.00      1VI      Ο-ΒΚ3
12375548.10 6825735.59 1406.85 1445.00    435VI      Κ-ΒΚ1
12375548.10 6825736.59 1427.72 1465.90    435VI      Ο-ΒΚ1
12375548.10 6825736.68 1429.62 1467.80    435VI      Κ-ΒΚ2
12375548.10 6825737.28 1442.41 1480.60    435VI      Ο-ΒΚ2
12375548.10 6825737.31 1443.10 1481.30    435VI      Κ-ΒΚ3
12375548.10 6825738.02 1458.49 1496.70    435VI      Ο-ΒΚ3
12369141.18 6829356.11 1381.54 1849.70    238PI      Κ-ΒΚ1
12369128.87 6829346.54 1399.12 1873.20    238PI      Ο-ΒΚ1
12369128.35 6829346.14 1399.87 1874.20    238PI      Κ-ΒΚ2
12369119.30 6829339.13 1412.97 1891.60    238PI      Ο-ΒΚ2
12369118.63 6829338.61 1413.96 1892.90    238PI      Κ-ΒΚ3
12369107.71 6829330.18 1430.19 1914.20    238PI      Ο-ΒΚ3
12369426.10 6829553.40 1385.85 1651.20    241PI      Κ-ΒΚ1
12369414.75 6829544.37 1407.06 1676.90    241PI      Ο-ΒΚ1
12369414.04 6829543.81 1408.38 1678.50    241PI      Κ-ΒΚ2
12369407.65 6829538.72 1420.48 1693.10    241PI      Ο-ΒΚ2
12369407.30 6829538.45 1421.15 1693.90    241PI      Κ-ΒΚ3
12369399.38 6829532.24 1436.43 1712.20    241PI      Ο-ΒΚ3
12369724.39 6829740.04 1388.00 1497.40    233PI      Κ-ΒΚ1
12369717.16 6829736.04 1409.25 1520.20    233PI      Ο-ΒΚ1
12369716.74 6829735.81 1410.46 1521.50    233PI      Κ-ΒΚ2
12369712.40 6829733.35 1423.22 1535.20    233PI      Ο-ΒΚ2
12369712.21 6829733.24 1423.77 1535.80    233PI      Κ-ΒΚ3
12369707.25 6829730.33 1438.92 1552.00    233PI      Ο-ΒΚ3
12370109.35 6829927.37 1381.34 1419.90      5PI      Κ-ΒΚ1
12370109.78 6829926.88 1401.33 1439.90      5PI      Ο-ΒΚ1
12370109.82 6829926.83 1403.22 1441.80      5PI      Κ-ΒΚ2
12370110.10 6829926.53 1416.02 1454.60      5PI      Ο-ΒΚ2
12370110.12 6829926.50 1417.22 1455.80      5PI      Κ-ΒΚ3
12370110.45 6829926.13 1433.41 1472.00      5PI      Ο-ΒΚ3
12370659.05 6829811.80 1386.55 1595.40    236PI      Κ-ΒΚ1
12370674.82 6829809.28 1409.18 1623.10    236PI      Ο-ΒΚ1
12370674.82 6829809.28 1409.18 1623.10    236PI      Κ-ΒΚ2
12370683.16 6829807.93 1420.97 1637.60    236PI      Ο-ΒΚ2
12370683.96 6829807.80 1422.11 1639.00    236PI      Κ-ΒΚ3
12370695.48 6829805.88 1439.44 1659.90    236PI      Ο-ΒΚ3
12370559.35 6830080.60 1387.19 1529.80    230PI      Κ-ΒΚ1
12370566.85 6830082.68 1407.98 1552.00    230PI      Ο-ΒΚ1
12370567.78 6830082.92 1410.61 1554.80    230PI      Κ-ΒΚ2
12370571.91 6830083.96 1422.46 1567.40    230PI      Ο-ΒΚ2
12370572.21 6830084.04 1423.31 1568.30    230PI      Κ-ΒΚ3
12370578.35 6830085.61 1440.90 1587.00    230PI      Ο-ΒΚ3
12371140.12 6830514.46 1388.00 1427.50     22PI      Κ-ΒΚ1
12371140.12 6830514.46 1406.10 1445.60     22PI      Ο-ΒΚ1
12371140.12 6830514.46 1409.70 1449.20     22PI      Κ-ΒΚ2
12371140.12 6830514.46 1422.10 1461.60     22PI      Ο-ΒΚ2
12371140.12 6830514.46 1422.80 1462.30     22PI      Κ-ΒΚ3
12371140.12 6830514.46 1438.40 1477.90     22PI      Ο-ΒΚ3
12371852.45 6830518.68 1397.88 1696.20    225PI      Κ-ΒΚ1
12371864.15 6830520.01 1417.17 1718.80    225PI      Ο-ΒΚ1
12371865.97 6830520.21 1420.27 1722.40    225PI      Κ-ΒΚ2
12371873.20 6830520.98 1432.81 1736.90    225PI      Ο-ΒΚ2
12371873.64 6830521.02 1433.59 1737.80    225PI      Κ-ΒΚ3
12371882.10 6830521.89 1448.78 1755.20    225PI      Ο-ΒΚ3
12369471.68 6829200.44 1380.34 1796.30    243PI      Κ-ΒΚ1
12369460.77 6829184.52 1400.90 1824.50    243PI      Ο-ΒΚ1
12369460.19 6829183.67 1401.99 1826.00    243PI      Κ-ΒΚ2
12369453.52 6829173.96 1414.53 1843.20    243PI      Ο-ΒΚ2
12369453.06 6829173.29 1415.41 1844.40    243PI      Κ-ΒΚ3
12369445.15 6829161.77 1430.54 1865.00    243PI      Ο-ΒΚ3
12369959.63 6829276.04 1387.40 1656.50    244PI      Κ-ΒΚ1
12369959.02 6829260.44 1410.88 1684.70    244PI      Ο-ΒΚ1
12369959.01 6829259.94 1411.63 1685.60    244PI      Κ-ΒΚ2
12369958.86 6829251.47 1424.26 1700.80    244PI      Ο-ΒΚ2
12369958.85 6829250.97 1425.00 1701.70    244PI      Κ-ΒΚ3
12369958.80 6829241.05 1439.66 1719.40    244PI      Ο-ΒΚ3
12369740.66 6829306.22 1380.56 1626.00    234PI      Κ-ΒΚ1
12369734.83 6829295.49 1400.99 1649.80    234PI      Ο-ΒΚ1
12369734.49 6829294.87 1402.20 1651.20    234PI      Κ-ΒΚ2
12369731.10 6829288.69 1414.30 1665.20    234PI      Ο-ΒΚ2
12369730.79 6829288.12 1415.42 1666.50    234PI      Κ-ΒΚ3
12369726.61 6829280.37 1430.89 1684.30    234PI      Ο-ΒΚ3
12369920.28 6829444.25 1381.51 1627.20    235PI      Κ-ΒΚ1
12369931.36 6829434.23 1403.27 1653.60    235PI      Ο-ΒΚ1
12369931.91 6829433.77 1404.35 1654.90    235PI      Κ-ΒΚ2
12369938.16 6829428.66 1416.63 1669.60    235PI      Ο-ΒΚ2
12369938.55 6829428.35 1417.39 1670.50    235PI      Κ-ΒΚ3
12369946.48 6829422.22 1432.70 1688.80    235PI      Ο-ΒΚ3
12370008.07 6829560.36 1383.38 1492.90    232PI      Κ-ΒΚ1
12370007.39 6829554.10 1403.73 1514.20    232PI      Ο-ΒΚ1
12370007.35 6829553.77 1404.78 1515.30    232PI      Κ-ΒΚ2
12370006.93 6829549.31 1418.88 1530.10    232PI      Ο-ΒΚ2
12370006.92 6829549.10 1419.55 1530.80    232PI      Κ-ΒΚ3
12370006.52 6829544.14 1435.28 1547.30    232PI      Ο-ΒΚ3
12370383.45 6829635.98 1386.15 1507.00    231PI      Κ-ΒΚ1
12370389.29 6829631.32 1406.42 1528.60    231PI      Ο-ΒΚ1
12370389.82 6829630.90 1408.30 1530.60    231PI      Κ-ΒΚ2
12370393.12 6829628.32 1419.97 1543.00    231PI      Ο-ΒΚ2
12370393.25 6829628.22 1420.44 1543.50    231PI      Κ-ΒΚ3
12370397.65 6829624.90 1435.68 1559.70    231PI      Ο-ΒΚ3
12370861.97 6829567.84 1391.11 1756.30    226PI      Κ-ΒΚ1
12370858.40 6829551.60 1412.50 1783.40    226PI      Ο-ΒΚ1
12370858.16 6829550.49 1414.02 1785.30    226PI      Κ-ΒΚ2
12370856.20 6829541.61 1426.57 1800.80    226PI      Ο-ΒΚ2
12370856.03 6829540.83 1427.72 1802.20    226PI      Κ-ΒΚ3
12370853.97 6829530.83 1442.67 1820.30    226PI      Ο-ΒΚ3
12372137.09 6829672.88 1389.62 1632.70    260PI      Κ-ΒΚ1
12372144.42 6829682.66 1410.28 1656.70    260PI      Ο-ΒΚ1
12372144.87 6829683.27 1411.57 1658.20    260PI      Κ-ΒΚ2
12372149.04 6829688.84 1423.49 1672.00    260PI      Ο-ΒΚ2
12372149.28 6829689.16 1424.18 1672.80    260PI      Κ-ΒΚ3
12372154.27 6829695.79 1438.67 1689.50    260PI      Ο-ΒΚ3
12372746.19 6829614.76 1390.15 1428.00      2PI      Κ-ΒΚ1
12372746.99 6829615.11 1410.33 1448.20      2PI      Ο-ΒΚ1
12372747.07 6829615.14 1412.13 1450.00      2PI      Κ-ΒΚ2
12372747.50 6829615.38 1423.52 1461.40      2PI      Ο-ΒΚ2
12372747.54 6829615.40 1424.42 1462.30      2PI      Κ-ΒΚ3
12372748.10 6829615.71 1439.21 1477.10      2PI      Ο-ΒΚ3
12371757.86 6829021.45 1379.29 1425.10     21PI      Κ-ΒΚ1
12371757.86 6829021.99 1397.18 1443.00     21PI      Ο-ΒΚ1
12371757.86 6829022.08 1399.88 1445.70     21PI      Κ-ΒΚ2
12371757.86 6829022.50 1413.57 1459.40     21PI      Ο-ΒΚ2
12371757.86 6829022.51 1414.17 1460.00     21PI      Κ-ΒΚ3
12371757.86 6829022.98 1429.47 1475.30     21PI      Ο-ΒΚ3
12372556.69 6827709.78 1381.46 1506.20     27PI      Κ-ΒΚ1
12372553.13 6827703.70 1402.62 1528.50     27PI      Ο-ΒΚ1
12372552.76 6827703.09 1404.80 1530.80     27PI      Κ-ΒΚ2
12372550.79 6827699.94 1416.21 1542.80     27PI      Ο-ΒΚ2
12372550.60 6827699.66 1417.26 1543.90     27PI      Κ-ΒΚ3
12372547.72 6827695.32 1433.55 1561.00     27PI      Ο-ΒΚ3
12368983.29 6831896.41 1389.17 1534.80   1033PI      Κ-ΒΚ1
12368986.21 6831901.16 1409.83 1556.20   1033PI      Ο-ΒΚ1
12368986.40 6831901.46 1411.19 1557.60   1033PI      Κ-ΒΚ2
12368988.21 6831904.37 1424.35 1571.20   1033PI      Ο-ΒΚ2
12368988.33 6831904.56 1425.22 1572.10   1033PI      Κ-ΒΚ3
12368990.48 6831907.98 1441.11 1588.50   1033PI      Ο-ΒΚ3
12368990.56 6829714.14 1380.14 1841.30    242PI      Κ-ΒΚ1
12368971.01 6829708.07 1400.53 1870.20    242PI      Ο-ΒΚ1
12368969.79 6829707.70 1401.81 1872.00    242PI      Κ-ΒΚ2
12368955.91 6829703.40 1416.41 1892.60    242PI      Ο-ΒΚ2
12368955.57 6829703.30 1416.76 1893.10    242PI      Κ-ΒΚ3
12368941.09 6829698.95 1432.04 1914.60    242PI      Ο-ΒΚ3
12376203.76 6828335.00 1409.26 1565.20   2703VI      Κ-ΒΚ1
12376205.56 6828344.68 1430.92 1589.00   2703VI      Ο-ΒΚ1
12376205.67 6828345.25 1432.20 1590.40   2703VI      Κ-ΒΚ2
12376206.69 6828350.74 1444.38 1603.80   2703VI      Ο-ΒΚ2
12376206.74 6828351.02 1445.02 1604.50   2703VI      Κ-ΒΚ3
12376208.10 6828358.33 1461.19 1622.30   2703VI      Ο-ΒΚ3
12374337.60 6828849.34 1403.10 1437.20      3PI      Κ-ΒΚ1
12374338.04 6828849.56 1423.39 1457.50      3PI      Ο-ΒΚ1
12374338.08 6828849.58 1425.49 1459.60      3PI      Κ-ΒΚ2
12374338.37 6828849.71 1439.89 1474.00      3PI      Ο-ΒΚ2
12374338.39 6828849.72 1441.09 1475.20      3PI      Κ-ΒΚ3
12374338.60 6828849.78 1453.78 1487.90      3PI      Ο-ΒΚ3
12371015.31 6830927.67 1388.73 1533.50     24PI      Κ-ΒΚ1
12371016.05 6830935.75 1408.43 1554.80     24PI      Ο-ΒΚ1
12371016.19 6830936.77 1410.92 1557.50     24PI      Κ-ΒΚ2
12371016.92 6830941.96 1423.58 1571.20     24PI      Ο-ΒΚ2
12371016.96 6830942.23 1424.22 1571.90     24PI      Κ-ΒΚ3
12371018.05 6830948.54 1439.32 1588.30     24PI      Ο-ΒΚ3
12371449.79 6830914.47 1388.43 1554.20     23PI      Κ-ΒΚ1
12371460.57 6830924.05 1408.60 1579.00     23PI      Ο-ΒΚ1
12371461.78 6830925.11 1410.89 1581.80     23PI      Κ-ΒΚ2
12371468.03 6830930.65 1422.87 1596.40     23PI      Ο-ΒΚ2
12371468.38 6830930.95 1423.53 1597.20     23PI      Κ-ΒΚ3
12371137.73 6830484.46 1387.51 1477.10   2401PI      Κ-ΒΚ1
12371137.73 6830484.46 1408.11 1497.70   2401PI      Ο-ΒΚ1
12371137.73 6830484.46 1410.01 1499.60   2401PI      Κ-ΒΚ2
12371137.73 6830484.46 1423.31 1512.90   2401PI      Ο-ΒΚ2
12371137.73 6830484.46 1424.51 1514.10   2401PI      Κ-ΒΚ3
12371137.73 6830484.46 1439.31 1528.90   2401PI      Ο-ΒΚ3
12387833.98 6820999.06 1454.07 1494.30    422PI      Κ-ΒΚ1
12387833.98 6820999.94 1476.26 1516.50    422PI      Ο-ΒΚ1
12387833.98 6821000.02 1478.25 1518.50    422PI      Κ-ΒΚ2
12387833.98 6821000.55 1492.34 1532.60    422PI      Ο-ΒΚ2
12387833.98 6821000.58 1493.14 1533.40    422PI      Κ-ΒΚ3
12387833.98 6821001.08 1506.53 1546.80    422PI      Ο-ΒΚ3
12380422.99 6820237.48 1417.10 1467.70    423PI      Κ-ΒΚ1
12380422.99 6820238.49 1438.48 1489.10    423PI      Ο-ΒΚ1
12380422.99 6820238.57 1440.17 1490.80    423PI      Κ-ΒΚ2
12380422.99 6820239.16 1452.56 1503.20    423PI      Ο-ΒΚ2
12380422.99 6820239.24 1454.06 1504.70    423PI      Κ-ΒΚ3
12380422.99 6820239.93 1468.54 1519.20    423PI      Ο-ΒΚ3
12364458.34 6832243.63 1394.93 1433.20      4PI      Κ-ΒΚ1
12364459.23 6832244.31 1415.90 1454.20      4PI      Ο-ΒΚ1
12364459.29 6832244.35 1417.20 1455.50      4PI      Κ-ΒΚ2
12364459.88 6832244.74 1429.68 1468.00      4PI      Ο-ΒΚ2
12364459.96 6832244.79 1431.28 1469.60      4PI      Κ-ΒΚ3
12364460.75 6832245.25 1446.65 1485.00      4PI      Ο-ΒΚ3
12379994.13 6821193.09 1415.76 1463.30    801PI      Κ-ΒΚ1
12379994.07 6821193.29 1436.76 1484.30    801PI      Ο-ΒΚ1
12379994.06 6821193.30 1438.16 1485.70    801PI      Κ-ΒΚ2
12379994.01 6821193.42 1451.16 1498.70    801PI      Ο-ΒΚ2
12379994.01 6821193.43 1451.86 1499.40    801PI      Κ-ΒΚ3
12379993.92 6821193.57 1466.96 1514.50    801PI      Ο-ΒΚ3
12393120.71 6817692.26 1435.44 1481.90     15PI      Κ-ΒΚ1
12393121.32 6817692.83 1457.12 1503.60     15PI      Ο-ΒΚ1
12393121.35 6817692.86 1458.42 1504.90     15PI      Κ-ΒΚ2
12393121.65 6817693.11 1469.52 1516.00     15PI      Ο-ΒΚ2
12393121.67 6817693.13 1470.41 1516.90     15PI      Κ-ΒΚ3
12393122.03 6817693.40 1485.21 1531.70     15PI      Ο-ΒΚ3
12390316.49 6815717.39 1434.14 1483.20    430PI      Κ-ΒΚ1
12390316.49 6815718.10 1454.52 1503.60    430PI      Ο-ΒΚ1
12390316.49 6815718.17 1456.52 1505.60    430PI      Κ-ΒΚ2
12390316.49 6815718.59 1467.92 1517.00    430PI      Ο-ΒΚ2
12390316.49 6815718.61 1468.42 1517.50    430PI      Κ-ΒΚ3
12390316.49 6815719.14 1483.11 1532.20    430PI      Ο-ΒΚ3
12372700.76 6829750.68 1396.06 1926.70    263PI      Κ-ΒΚ1
12372719.75 6829764.13 1417.73 1958.50    263PI      Ο-ΒΚ1
12372720.79 6829764.83 1418.87 1960.20    263PI      Κ-ΒΚ2
12372733.19 6829773.25 1432.56 1980.50    263PI      Ο-ΒΚ2
12379320.23 6833395.91 1415.95 1454.40    428VI      Κ-ΒΚ1
12379320.23 6833396.67 1437.64 1476.10    428VI      Ο-ΒΚ1
12379320.23 6833396.70 1438.54 1477.00    428VI      Κ-ΒΚ2
12379320.23 6833397.03 1448.73 1487.20    428VI      Ο-ΒΚ2
12371245.27 6831081.79 1394.41 1573.20    221PI      Κ-ΒΚ1
12371247.79 6831090.21 1414.36 1595.00    221PI      Ο-ΒΚ1
12371248.16 6831091.46 1417.28 1598.20    221PI      Κ-ΒΚ2
12371249.53 6831096.13 1428.03 1610.00    221PI      Ο-ΒΚ2
12369025.56 6829870.02 1382.00 1813.90   242bPI      Κ-ΒΚ1
12369006.86 6829863.26 1402.54 1842.50   242bPI      Ο-ΒΚ1
12369004.75 6829862.49 1404.83 1845.70   242bPI      Κ-ΒΚ2
12368993.03 6829858.24 1417.40 1863.40   242bPI      Ο-ΒΚ2
